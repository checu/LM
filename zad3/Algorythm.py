# maszyna Turinga: "+3" do liczby rzeczywistej 

alphabet ="-123456789"

state_table=[
            [[0,"","P"],[2,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"]],
            [[3,"","L"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"]],
            [[4,"","L"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"]],
            [[-1,"",""],[-1,"",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""],[10,"7",""],[10,"8",""],[10,"9",""],[5,"0","L"],[5,"1","L"],[5,"2","L"]],
            [[-1,"",""],[-1,"",""],[6,"7","L"],[6,"8","L"],[6,"9","L"],[10,"0",""],[10,"1",""],[10,"2",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""]],
            [[10,"1",""],[-1,"",""],[10,"1",""],[10,"2",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""],[10,"7",""],[10,"8",""],[10,"9",""],[5,"0","L"]],
            [[-1,"",""],[9,"#","P"],[6,"9","L"],[7,"0","L"],[10,"1",""],[10,"2",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""],[10,"7",""],[10,"8",""]],
            [[-1,"",""],[8,"#","P"],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""]],
            [[-1,"",""],[-1,"",""],[10,"-",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""]],
            [[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[10,"3",""],[10,"2",""],[10,"1",""]],
            [[],[],[],[],[],[],[],[],[],[],[],[]]
             ]

tape=[]

#dane wejsciowe
chain = open("ciagi.txt", 'r')
chains = chain.read()
chain.close()
sequences = str(chains).split('\n')

#turing
def Turing_Machine(sequence):
    tape=[]
    index = 0
    charters=sequences[index]
    tape=list(charters)
    state=state_table[0][0]
    lista=[]
    start = 0
    while state[0]!=10:

        charter=tape[index]

        if charter == "#":
            charter = -2
        elif charter == "-":
            charter = -1

        if start==0:
            state = state_table[0][int(charter)+2]
        else:
            state=state_table[state[0]][int(charter)+2]
            if state[1]!="":
                tape[index]=state[1]

        if state[2] == "P":
            index += 1
        elif state[2] == "L":
            index -= 1

        start+=1
        lista.append(state)
        print(state)
        print(tape)
    print(lista)

Turing_Machine(sequences)
