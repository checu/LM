# maszyna Turinga: "+3" do liczby rzeczywistej 

alphabet ="-123456789"

state_table=[
            [[0,"","P"],[2,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"]],
            [[3,"","L"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"],[1,"","P"]],
            [[4,"","L"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"],[2,"","P"]],
            [[-1,"",""],[-1,"",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""],[10,"7",""],[10,"8",""],[10,"9",""],[5,"0","L"],[5,"1","L"],[5,"2","L"]],
            [[-1,"",""],[-1,"",""],[6,"7","L"],[6,"8","L"],[6,"9","L"],[10,"0",""],[10,"1",""],[10,"2",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""]],
            [[10,"1",""],[-1,"",""],[10,"1",""],[10,"2",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""],[10,"7",""],[10,"8",""],[10,"9",""],[5,"0","L"]],
            [[-1,"",""],[9,"#","P"],[6,"9","L"],[7,"0","L"],[10,"1",""],[10,"2",""],[10,"3",""],[10,"4",""],[10,"5",""],[10,"6",""],[10,"7",""],[10,"8",""]],
            [[-1,"",""],[8,"#","P"],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""],[10,"",""]],
            [[-1,"",""],[-1,"",""],[10,"-",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""]],
            [[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[-1,"",""],[10,"3",""],[10,"2",""],[10,"1",""]],
            [[],[],[],[],[],[],[],[],[],[],[],[]]
             ]

tape=[]

chain = open("ciagi.txt", 'r')
chains = chain.read()
chain.close()

sequence_table = str(chain).split('\n')
print(sequence_table)

def Turing_Machine(charter,state):
    tape=[]
    index = 0
    for element in elements:
        index += 1
        if index == 1:
            state = state_table[0][int(element)]

            steps_table.append(state)